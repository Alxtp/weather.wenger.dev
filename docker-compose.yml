services:
  weewx:
    container_name: weewx
    build:
      context: ./container/weewx
      args:
        - TIMEZONE
        - LANGUAGE
        - STATION_ALTITUDE
        - STATION_LATITUDE
        - STATION_LONGITUDE
        - STATION_LOCATION
        - MQTT_ENABLED
        - MQTT_HOST
        - MQTT_PORT
        - MQTT_SSL
      secrets:
        - mqtt_password
    restart: unless-stopped
    volumes:
      - db:/home/weewx/archive
      - html:/home/weewx/public_html
    labels:
      - com.centurylinklabs.watchtower.enable=false
    devices:
      - /dev/ttyUSB0:/dev/ttyUSB0
  nginx:
    container_name: weewx-nginx
    image: nginx:latest
    restart: unless-stopped
    depends_on:
      - weewx
    volumes:
      - html:/usr/share/nginx/html
    labels:
      - traefik.enable=true
      - traefik.http.routers.weewx.rule=Host(`wetter.wenger.dev`) || Host(`weather.wenger.dev`)
      - traefik.http.routers.weewx.entryPoints=https
      - traefik.http.routers.weewx.tls=true
      - traefik.http.routers.weewx.tls.certresolver=cloudflare
  mosquitto:
    container_name: weewx-mosquitto
    build:
      context: ./container/mosquitto
      secrets:
        - mqtt_password
    restart: unless-stopped
    volumes:
      - mqtt-data:/mosquitto/data
      - mqtt-log:/mosquitto/log
    labels:
      - traefik.enable=true
      - traefik.http.routers.mosquitto.rule=Host(`mqtt.wenger.dev`)
      - traefik.http.routers.mosquitto.entryPoints=https
      - traefik.http.routers.mosquitto.tls=true
      - traefik.http.routers.mosquitto.tls.certresolver=cloudflare
      - traefik.http.routers.mosquitto.service=mosquitto
      - traefik.http.services.mosquitto.loadbalancer.server.port=9001
      - com.centurylinklabs.watchtower.enable=false

volumes:
  db:
  html:
  mqtt-data:
  mqtt-log:

networks:
  default:
    external: true
    name: private

secrets:
  mqtt_password:
    environment: MQTT_PASSWORD
